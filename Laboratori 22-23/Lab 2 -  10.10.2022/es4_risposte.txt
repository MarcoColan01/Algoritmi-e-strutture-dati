La funzione in questione è:

func f_rec (n int) uint64 {
	if n == 1 || n == 2 {
		return 1
	}
	return f_rec (n -1) + f_rec (n -2)
}

1. Cosa restituisce la funzione f_rec(7)?
Restituisce 13

2. Perché n è dichiarato come intero mentre il valore restituito è di tipo uint64?
Perchè il valore restituito dalla funzione può essere molto grande ed eccedere i limiti per una variabile di tipo int.

3. Riassumete a parole cosa restituisce la funzione se riceve come argomento un intero
positivo n maggiore di 0.
Per un n > 0, la funzione ne restituisce il corrispondente numero di fibonacci



Considerate ora le due funzioni f_iter1 e f_iter2

func f_iter1 (n int) uint64 {
    var f uint64
    var f1 , f2 uint64 = 1, 1
    if n == 2 || n == 1 {
        return 1
}

    for n >= 3 {
        n --
        f = f1 + f2
        f1 = f2
        f2 = f
    }
    return f
}

func f_iter2 (n int) uint64 {
    var f uint64
    var f1 , f2 uint64 = 1, 1
    if n == 2 || n == 1 {
        return 1
}

    for i := 2; i <= n; i++ {
        n --
        f = f1 + f2
        f1 = f2
        f2 = f
    }
    return f
}

Senza eseguire le funzioni al computer, rispondete alle seguenti domande:

4. Considerando solo il valore restituito, le due funzioni sono equivalenti? (ovvero: restituiscono sempre lo stesso valore?)
No, le due funzioni non sono equivalenti 


5. Le due funzioni sono equivalenti alla funzione f_rec?
Lo è solo f_iter1, f_iter2 non lo è


6. Modificate (se necessario) le funzioni f_iter1 e f_iter2 in modo che risultino essere equivalenti a f_rec.
Modifica a f_iter2:


7. Stimate il numero di operazioni che si svolgono durante l’esecuzione di f_rec, f_iter1 e f_iter2: sono paragonabili?

